---
import { ProductUtils, SEOUtils, StringUtils } from "../../utils/coreUtils";
import Layout from "../../layouts/Layout.astro";
import Main from "../../components/Main.astro";
import H1 from "../../components/H1.astro";
import { Image, getImage } from "astro:assets";
import { PRODUCT } from "../../utils/constants";
import MarkdownIt from "markdown-it";
import sanitizeHtml from "sanitize-html";
import { getEntryBySlug } from "astro:content";
import Back from "../../components/Back.astro";

const { slug } = Astro.params;
const product = await getEntryBySlug("products", slug as string);

if (!product) {
    return Astro.redirect("/404");
}

const md = new MarkdownIt();
const {
    images,
    sku,
    tags,
    unit,
    price,
    isAvailable,
    remarks,
    stones = "",
} = product.data;
const { productType, metalType, plating } = ProductUtils.deriveProductInfo(sku);
const description = SEOUtils.generateProductDetailSiteDescription(
    productType,
    metalType,
    plating,
    stones
);

const title = `Product ${sku}`;
const renderedRemarks = md.render(remarks);

const coverImageSrc = (await getImage({ src: images[0], format: "jpg" })).src;
---

<Layout
    title={title}
    description={description}
    type="product"
    image={coverImageSrc}
    product={{ sku: sku, price: `${price}`, currency: "HKD" }}
>
    <Main>
        <div class="mt-10">
            <H1 title={title} />
        </div>

        <Back sku={sku} />

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Product Image -->
            <div class="flex justify-center overflow-hidden rounded-3xl">
                <Image
                    class="w-full max-w-md shadow-lg object-cover transition-transform duration-300 ease-in-out hover:scale-110 rounded-3xl"
                    src={images[0]}
                    alt={title}
                    width={1024}
                    height={1024}
                />
            </div>

            <!-- Product Details -->
            <div class="space-y-4">
                <h2 class="text-2xl font-semibold text-sky-900">
                    Product details
                </h2>

                <div class="max-w-full overflow-x-auto">
                    <table
                        class="w-full bg-white border border-gray-200 rounded-lg shadow-sm"
                    >
                        <tbody>
                            <tr
                                class="border-t hover:bg-gray-200 hover:shadow-md transition duration-300"
                            >
                                <th
                                    class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm font-semibold text-gray-900 align-top text-left"
                                    >SKU</th
                                >
                                <td
                                    class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm font-medium text-gray-700"
                                    >{sku}</td
                                >
                            </tr>
                            <tr
                                class="border-t hover:bg-gray-200 hover:shadow-md transition duration-300"
                            >
                                <th
                                    class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm font-semibold text-gray-900 align-top text-left"
                                    >Unit price</th
                                >
                                <td
                                    class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm font-medium text-gray-700"
                                >
                                    HK${price} / {unit}
                                </td>
                            </tr>
                            <tr
                                class="border-t hover:bg-gray-200 hover:shadow-md transition duration-300"
                            >
                                <th
                                    class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm font-semibold text-gray-900 align-top text-left"
                                    >Stock</th
                                >
                                <td
                                    class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm font-medium text-gray-700"
                                >
                                    {isAvailable ? `Available` : "Out of stock"}
                                </td>
                            </tr>
                            <tr
                                class="border-t bg-gray-50 hover:bg-gray-200 hover:shadow-md transition duration-300"
                            >
                                <th
                                    class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm font-semibold text-gray-900 align-top text-left"
                                    >Product type</th
                                >
                                <td
                                    class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm text-gray-700"
                                >
                                    {
                                        StringUtils.capitalizeFirstLetter(
                                            productType
                                        )
                                    }
                                </td>
                            </tr>
                            {
                                productType != PRODUCT.TYPES.PACKAGING && (
                                    <>
                                        <tr class="border-t bg-gray-50 hover:bg-gray-200 hover:shadow-md transition duration-300">
                                            <th class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm font-semibold text-gray-900 align-top text-left">
                                                Base metal type
                                            </th>
                                            <td class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm text-gray-700">
                                                {StringUtils.capitalizeFirstLetter(
                                                    metalType
                                                )}
                                            </td>
                                        </tr>
                                        <tr class="border-t bg-gray-50 hover:bg-gray-200 hover:shadow-md transition duration-300">
                                            <th class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm font-semibold text-gray-900 align-top text-left">
                                                Plating
                                            </th>
                                            <td class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm text-gray-700">
                                                {StringUtils.capitalizeFirstLetter(
                                                    plating
                                                )}
                                            </td>
                                        </tr>
                                    </>
                                )
                            }
                            {
                                stones.trim() !== "" && (
                                    <tr class="border-t bg-gray-50 hover:bg-gray-200 hover:shadow-md transition duration-300">
                                        <th class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm font-semibold text-gray-900 align-top text-left">
                                            Stones
                                        </th>
                                        <td class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm text-gray-700">
                                            {StringUtils.capitalizeFirstLetter(
                                                stones
                                            )}
                                        </td>
                                    </tr>
                                )
                            }

                            {
                                remarks.trim() !== "" && (
                                    <tr class="border-t bg-gray-50 hover:bg-gray-200 hover:shadow-md transition duration-300">
                                        <th class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm font-semibold text-gray-900 align-top text-left">
                                            Remarks
                                        </th>
                                        <td class="px-3 py-3 sm:px-6 sm:py-4 text-xs sm:text-sm text-gray-700">
                                            <div
                                                set:html={sanitizeHtml(
                                                    renderedRemarks
                                                )}
                                            />
                                        </td>
                                    </tr>
                                )
                            }
                            {
                                tags.length > 0 && (
                                    <tr class="border-t bg-gray-50 hover:bg-gray-200 transition duration-300">
                                        <th class="px-3 py-3 sm:px-6 sm:py-4 whitespace-nowrap text-xs sm:text-sm font-semibold text-gray-900 align-top text-left">
                                            Tags
                                        </th>
                                        <td class="px-3 py-3 sm:px-6 sm:py-4 text-xs sm:text-sm text-gray-700">
                                            <div class="flex flex-wrap gap-1 sm:gap-2">
                                                {tags.map((tag: string) => (
                                                    <span class="inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                                        {tag}
                                                    </span>
                                                ))}
                                            </div>
                                        </td>
                                    </tr>
                                )
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        {/* Display additional product images */}
        {
            images.length > 1 && (
                <div class="mt-6 grid grid-cols-2 gap-2 sm:grid-cols-3 lg:grid-cols-4">
                    {images.slice(1).map((image, index: number) => (
                        <Image
                            src={image}
                            alt={`${sku} | Product image ${index + 2}`}
                            width={360}
                            height={360}
                            class="rounded-md object-cover"
                        />
                    ))}
                </div>
            )
        }
        <Back sku={sku} />
    </Main>
</Layout>
