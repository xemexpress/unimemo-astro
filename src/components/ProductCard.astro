---
import type { CollectionEntry } from "astro:content";
import { ProductUtils, StringUtils } from "../utils/coreUtils";
import { getImage, Image } from "astro:assets";
import { ROUTES } from "../utils/routes";

type Props = {
    product: CollectionEntry<"products">;
    currentOverviewURL?: string;
};

const { product } = Astro.props;

const { name, images, sku, unit, price, isAvailable } = product.data;

const { productType } = ProductUtils.deriveProductInfo(sku);

const currentPage = Astro.url.searchParams.get("page") || 1;
const productT = Astro.url.searchParams.get("product-type") || "";
const platingT = Astro.url.searchParams.get("plating-type") || "";
const metalT = Astro.url.searchParams.get("metal-type") || "";

// Generate the slug from the product name
const slug = StringUtils.slugify(name);

const coverImageSrc = (await getImage({ src: images[0], format: "jpg" })).src;
---

<article
    class="group relative transition-all duration-300 ease-in-out overflow-hidden rounded-lg"
    id={sku}
>
    <a
        href={`${ROUTES.PRODUCTS(slug)}?p=${currentPage}${productT.length > 0 ? `&product-type=${productT}` : ""}${platingT.length > 0 ? `&plating-type=${platingT}` : ""}${metalT.length > 0 ? `&metal-type=${metalT}` : ""}`}
        class="block relative"
    >
        <Image
            class="rounded-lg aspect-square transition-transform duration-300 ease-in-out group-hover:scale-105 group-hover:shadow-md"
            src={coverImageSrc}
            alt={`${sku} ${name}`}
            width={400}
            height={400}
            format="webp"
            loading="eager"
            transition:name={`${slug}-image`}
        />
        <div
            class="absolute top-2 left-2 bg-white bg-opacity-75 px-2 py-1 rounded text-sky-900 capitalize text-xs max-sm:text-[11px]"
            transition:name={`${slug}-product-type`}
        >
            {productType}
        </div>
        <div
            class="max-sm:hidden absolute top-2 right-2 bg-white bg-opacity-75 px-2 py-1 rounded text-xs max-sm:text-[11px]"
            transition:name={`${slug}-sku`}
        >
            {sku}
        </div>
        <div
            class="hidden absolute top-2 left-2 right-2 bg-white bg-opacity-75 px-2 py-1 justify-between items-center text-xs max-sm:text-[11px] rounded text-sky-900 capitalize max-sm:flex"
        >
            <span transition:name={`${slug}-product-type`}>
                {productType}
            </span>
            <span transition:name={`${slug}-sku`}>
                {sku}
            </span>
        </div>
        <div
            class="absolute bottom-2 left-2 bg-white bg-opacity-75 px-2 py-1 rounded text-xs max-sm:text-[11px]"
            transition:name={`${slug}-unit-price`}
        >
            HK${price}/{unit}
        </div>
        {
            !isAvailable && (
                <div class="absolute bottom-2 right-2 bg-red-500 bg-opacity-75 px-2 py-1 rounded text-xs text-white">
                    Out of Stock
                </div>
            )
        }
    </a>
</article>
