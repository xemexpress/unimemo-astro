---
import { METAL, PLATING, PRODUCT } from "../utils/constants";
import { StringUtils } from "../utils/coreUtils";
import { ROUTES } from "../utils/routes";

const currentSearchParams = Astro.url.searchParams;
const isPackagingSelected =
    currentSearchParams.get("product-type") === "packaging";

const filterCategories = [
    {
        title: "Product types",
        categories: PRODUCT.ALL_TYPES,
        paramName: "product-type",
    },
    {
        title: "Metal types",
        categories: METAL.ALL_TYPES,
        paramName: "metal-type",
        disabled: isPackagingSelected,
    },
    {
        title: "Plating types",
        categories: PLATING.ALL_TYPES,
        paramName: "plating-type",
        disabled: isPackagingSelected,
    },
];

const generateLink = (category: string, paramName: string) => {
    const params = new URLSearchParams(currentSearchParams);
    if (params.get(paramName) === category) {
        params.delete(paramName);
    } else {
        params.set(paramName, category);
        if (paramName === "product-type" && category === "packaging") {
            params.delete("metal-type");
            params.delete("plating-type");
        }
    }
    params.set("page", "1");
    return `?${params.toString()}`;
};

const activeFilters = filterCategories
    .map((category) => ({
        paramName: category.paramName,
        value: currentSearchParams.get(category.paramName) || "",
    }))
    .filter((filter) => filter.value);
---

<div class="bg-white shadow rounded-lg p-4 mb-6">
    <h2 class="text-xl font-semibold mb-4 flex justify-between items-center">
        Filters
        {
            activeFilters.length > 0 && (
                <span class="text-sm font-normal text-gray-500">
                    {activeFilters.length} active
                </span>
            )
        }
    </h2>
    {
        filterCategories.map((category) => (
            <details class="mb-4" data-category={category.paramName}>
                <summary
                    class={`font-medium text-lg cursor-pointer transition-colors ${category.disabled ? "text-gray-400" : "hover:text-sky-600"}`}
                >
                    {category.title}
                    {!category.disabled && (
                        <span class="text-sm font-normal text-gray-500 ml-2">
                            {StringUtils.capitalizeFirstLetter(
                                currentSearchParams.get(category.paramName) ??
                                    "any"
                            )}
                        </span>
                    )}
                </summary>
                {!category.disabled && (
                    <div class="mt-2 flex flex-wrap gap-2">
                        {category.categories.map((item) => {
                            const isActive =
                                currentSearchParams.get(category.paramName) ===
                                item;
                            const href = generateLink(item, category.paramName);
                            return (
                                <a
                                    href={href}
                                    class={`px-3 py-1 rounded-full text-sm capitalize transition-colors duration-300 ${
                                        isActive
                                            ? "bg-sky-600 text-white"
                                            : "bg-gray-200 text-gray-800 hover:bg-sky-500 hover:text-white"
                                    }`}
                                >
                                    {item}
                                    {isActive && <span class="ml-1">✕</span>}
                                </a>
                            );
                        })}
                    </div>
                )}
            </details>
        ))
    }
    {
        activeFilters.length > 0 && (
            <a
                href={`${ROUTES.OVERVIEW}`}
                class="text-sky-600 hover:text-sky-800 transition-colors text-sm"
            >
                Clear all filters
            </a>
        )
    }
</div>

<style>
    details > summary {
        list-style: none;
    }
    details > summary::-webkit-details-marker {
        display: none;
    }
    details > summary::after {
        content: "+";
        float: right;
    }
    details[open] > summary::after {
        content: "−";
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const activeFilters = new URLSearchParams(window.location.search);
        activeFilters.forEach((_, key) => {
            const details = document.querySelector(
                `details[data-category="${key}"]`
            );
            if (details) {
                details.setAttribute("open", "");
            }
        });
    });
</script>
