---
import { SEO } from "astro-seo";

import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import { OUR_BRAND } from "../utils/constants";
import { getImage } from "astro:assets";
import logo from "../content/logo.png";
import logoBg from "../content/logo-bg.png";

type Props = {
    title: string;
    description: string;
    type?: string;
    image?: string;
    product?: {
        sku: string;
        price: string;
        currency: string;
    };
};

const { title, description, type = "website", image, product } = Astro.props;
const brandedTitle = title.toLowerCase().includes(OUR_BRAND.NAME.toLowerCase())
    ? title
    : `${title} | ${OUR_BRAND.NAME}`;

const finalImageSrc = (
    await getImage({
        src: image || logo,
        width: 1200,
        height: 630,
        format: "jpg",
        quality: 90,
        fit: "contain", // This will add padding to maintain aspect ratio
        background: "white", // Optional: Set background color if needed
    })
).src;

// Also create a PNG version for broader support
const faviconSrcPNG = (
    await getImage({
        src: logoBg,
        width: 32,
        height: 32,
        format: "png",
        quality: 90,
    })
).src;
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="sitemap" href="/sitemap-index.xml" />
        <link rel="icon" type="image/png" href={faviconSrcPNG} />

        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />

        <SEO
            title={brandedTitle}
            description={description}
            openGraph={{
                basic: {
                    title: brandedTitle,
                    type: type,
                    image: finalImageSrc,
                    url: Astro.url,
                },
                optional: {
                    description: description,
                    siteName: OUR_BRAND.NAME,
                },
                image: {
                    url: finalImageSrc,
                    alt: description,
                },
            }}
            twitter={{
                card: "summary_large_image",
                site: Astro.url.href,
                creator: "@xemexpress",
                title: brandedTitle,
                description: description,
                image: finalImageSrc,
                imageAlt: description,
            }}
            extend={{
                // extending the default link tags
                link: [{ rel: "icon", href: OUR_BRAND.LOGO }],
                // extending the default meta tags
                meta: product && [
                    { name: "og:price:sku", content: product?.sku },
                    { name: "og:price:amount", content: product?.price },
                    { name: "og:price:currency", content: product?.currency },
                    { name: "product:brand", content: OUR_BRAND.NAME },
                ],
            }}
        />

        <meta
            name="google-site-verification"
            content="LcgIWvFWzJ_TFe9E2nuM6LfmtdXoSfwl5HX0En1P9Is"
        />
    </head>
    <body class="min-h-screen grid grid-rows-[auto, fr, auto]">
        <Header />
        <slot />
        <Footer />
        <button
            id="backToTopBtn"
            class="fixed bottom-8 right-8 bg-sky-900 text-white p-3 rounded-full shadow-lg opacity-0 transition-opacity duration-300 hover:bg-sky-700"
            aria-label="Back to top"
        >
            <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-6 w-6"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
            </svg>
        </button>
        <script>
            const backToTopBtn = document.getElementById(
                "backToTopBtn"
            ) as HTMLButtonElement;

            window.addEventListener("scroll", () => {
                if (window.scrollY > 300) {
                    backToTopBtn.classList.remove("opacity-0");
                    backToTopBtn.classList.add("opacity-100");
                } else {
                    backToTopBtn.classList.remove("opacity-100");
                    backToTopBtn.classList.add("opacity-0");
                }
            });

            backToTopBtn.addEventListener("click", () => {
                window.scrollTo({
                    top: 0,
                    behavior: "smooth",
                });
            });
        </script>
    </body>
</html>
