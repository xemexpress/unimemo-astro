---
import { SEO } from "astro-seo";

import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import { OUR_BRAND } from "../utils/constants";
import { getImage } from "astro:assets";
import logo from "../content/logo.png";
import logoBg from "../content/logo-bg.png";
import BackToTop from "../components/BackToTop.astro";
import { ViewTransitions } from "astro:transitions";

type Props = {
    title: string;
    description: string;
    type?: string;
    image?: string;
    product?: {
        sku: string;
        price: string;
        currency: string;
    };
};

const { title, description, type = "website", image, product } = Astro.props;
const brandedTitle = title.toLowerCase().includes(OUR_BRAND.NAME.toLowerCase())
    ? title
    : `${title} | ${OUR_BRAND.NAME}`;

const finalImageSrc = (
    await getImage({
        src: image || logo,
        width: 1200,
        height: 630,
        format: "jpg",
        quality: 90,
        fit: "contain",
        background: "white",
    })
).src;

const faviconSrcPNG = (
    await getImage({
        src: logoBg,
        width: 32,
        height: 32,
        format: "png",
        quality: 90,
    })
).src;
---

<html lang="en">
    <head>
        <!-- Google tag (gtag.js) -->
        <script
            is:inline
            type="text/partytown"
            async
            src="https://www.googletagmanager.com/gtag/js?id=G-0DX2BT6EQ9"
        ></script>
        <script is:inline type="text/partytown">
            window.dataLayer = window.dataLayer || [];
            function gtag() {
                dataLayer.push(arguments);
            }
            gtag("js", new Date());

            gtag("config", "G-0DX2BT6EQ9");
        </script>

        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta name="generator" content={Astro.generator} />

        <link rel="sitemap" href="/sitemap-index.xml" />
        <link rel="icon" type="image/png" href={faviconSrcPNG} />

        <SEO
            title={brandedTitle}
            description={description}
            openGraph={{
                basic: {
                    title: brandedTitle,
                    type: type,
                    image: finalImageSrc,
                    url: Astro.url,
                },
                optional: {
                    description: description,
                    siteName: OUR_BRAND.NAME,
                },
                image: {
                    url: finalImageSrc,
                    alt: description,
                },
            }}
            twitter={{
                card: "summary_large_image",
                site: Astro.url.href,
                creator: "@xemexpress",
                title: brandedTitle,
                description: description,
                image: finalImageSrc,
                imageAlt: description,
            }}
            extend={{
                // extending the default link tags
                link: [{ rel: "icon", href: OUR_BRAND.LOGO }],
                // extending the default meta tags
                meta: product && [
                    { name: "og:price:sku", content: product?.sku },
                    { name: "og:price:amount", content: product?.price },
                    { name: "og:price:currency", content: product?.currency },
                    { name: "product:brand", content: OUR_BRAND.NAME },
                ],
            }}
        />

        <meta
            name="google-site-verification"
            content="LcgIWvFWzJ_TFe9E2nuM6LfmtdXoSfwl5HX0En1P9Is"
        />
        <ViewTransitions />
    </head>
    <body class="min-h-screen grid grid-rows-[auto,1fr,auto]">
        <Header />
        <slot />
        <Footer />
        <BackToTop />

        <!-- Improved Toast Notification Container -->
        <div
            id="toast"
            class="fixed bottom-4 left-4 right-4 sm:left-1/2 sm:-translate-x-1/2 px-4 py-2 sm:px-6 sm:py-3 rounded-lg text-white opacity-0 transition-all duration-300 ease-in-out z-50 shadow-lg sm:max-w-md text-center"
        >
        </div>

        <script>
            import { formSubmit } from "../lib/formSubmit";

            const forms = document.querySelectorAll(
                "form"
            ) as NodeListOf<HTMLFormElement>;

            forms.forEach((form) => {
                formSubmit(form);
            });

            // Improved Toast Notification Function
            function showToast(
                message: string,
                type: "success" | "error" = "success"
            ) {
                const toast = document.getElementById("toast");
                if (toast) {
                    toast.textContent = message;
                    toast.className = `fixed bottom-4 left-4 right-4 sm:left-1/2 sm:-translate-x-1/2 px-4 py-2 sm:px-6 sm:py-3 rounded-lg text-white opacity-100 transition-all duration-300 ease-in-out z-50 shadow-lg sm:max-w-md text-center ${
                        type === "success" ? "bg-green-500" : "bg-red-500"
                    }`;

                    // Clear any existing timeouts
                    if (toast.dataset.timeoutId) {
                        clearTimeout(parseInt(toast.dataset.timeoutId));
                    }

                    // Set new timeout
                    const timeoutId = setTimeout(() => {
                        toast.classList.remove("opacity-100");
                        toast.classList.add("opacity-0", "translate-y-2");
                    }, 3000);

                    toast.dataset.timeoutId = timeoutId.toString();
                }
            }

            // Make showToast available globally
            (window as any).showToast = showToast;
        </script>
    </body>
</html>
